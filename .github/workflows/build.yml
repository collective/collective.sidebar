# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Build

on:
    push:
        branches: [master]
    pull_request:
        branches: [master]

jobs:
    build:
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                plone-version:
                  - 'Plone 6.0'
                python-version: ['3.8', '3.9', '3.10', '3.11']

        steps:
            # git checkout
            - uses: actions/checkout@v2

            # python setup
            - name: Set up Python
              uses: actions/setup-python@v2
              with:
                  python-version: ${{ matrix.python-version }}

            # system
            - name: Install system libraries
              run: sudo apt-get install libxml2-dev libxslt1-dev libjpeg-dev xvfb

            # buildout cache
            - uses: actions/cache@v2
              with:
                  path: |
                    ~/buildout-cache
                    ~/extends
                    ~/.cache/pip
                  key: ${{ runner.os }}-${{ matrix.python-version }}-${{ matrix.plone-version }}-${{ hashFiles('**/*.cfg') }}

            # setup buildout cache
            - name: Setup buildout cache
              run: |
                  mkdir -p ~/buildout-cache/{eggs,downloads}
                  mkdir ~/.buildout
                  echo "[buildout]" > $HOME/.buildout/default.cfg
                  echo "download-cache = $HOME/buildout-cache/downloads" >> $HOME/.buildout/default.cfg
                  echo "eggs-directory = $HOME/buildout-cache/eggs" >> $HOME/.buildout/default.cfg

            # bootstrap buildout
            - name: Bootstrap buildout
              run: |
                ./bootstrap.sh

            # test
            - name: Run tests
              run: |
                  bin/test

            # create coverage
            - name: Create coverage
              run: |
                  bin/createcoverage
                  bin/coverage lcov -i

            # coverage
            - name: Coveralls
              uses: coverallsapp/github-action@master
              with:
                github-token: ${{ secrets.GITHUB_TOKEN }}
                path-to-lcov: coverage.lcov
